# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: "3.0"

services:

  coffeechaintp1:
    image: sawtooth/coffeechain-tp:latest
    container_name: coffeechaintp1
    depends_on:
      - validator
    entrypoint: python processor.py --host validator

  coffeechaintp2:
    image: sawtooth/coffeechain-tp:latest
    container_name: coffeechaintp2
    depends_on:
      - validator2
    entrypoint: python processor.py --host validator2

  coffeechaintp3:
    image: sawtooth/coffeechain-tp:latest
    container_name: coffeechaintp3
    depends_on:
      - validator3
    entrypoint: python processor.py --host validator3

  coffeechaintp4:
    image: sawtooth/coffeechain-tp:latest
    container_name: coffeechaintp4
    depends_on:
      - validator4
    entrypoint: python processor.py --host validator4




  settingstp:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: settingstp1
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004

  settingstp2:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: settingstp2
    depends_on:
      - validator2
    entrypoint: settings-tp -vv -C tcp://validator2:4004

  settingstp3:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: settingstp3
    depends_on:
      - validator3
    entrypoint: settings-tp -vv -C tcp://validator3:4004

  settingstp4:
    image: hyperledger/sawtooth-settings-tp:1.0
    container_name: settingstp4
    depends_on:
      - validator4
    entrypoint: settings-tp -vv -C tcp://validator4:4004

  validator:
    image: sawtooth/coffeechain-validator-npm:latest
    container_name: validator1
    hostname: validator1
    expose:
      - 4004
    ports:
      - "4004:4004"
    # start the validator with an empty genesis batch
    entrypoint: "bash -c \"\
        . ./keypairtest.sh && \
        echo $KEYS[*] && \
        ./start_genesis_node.sh tcp://validator:8800 tcp://validator2:8800,tcp://validator3:8800,tcp://validator4:8800
        \""
    volumes:
      - validator1-vol:/configs/
      # sawadm keygen && \
      #   sawtooth keygen my_key && \
      #   sawset genesis -k /root/.sawtooth/keys/my_key.priv && \
      #   sawadm genesis config-genesis.batch && \
#        mv /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml && \
          # --endpoint tcp://validator:8800 \
          # --bind component:tcp://eth0:4004 \
          # --bind network:tcp://eth0:8800 \
          # --scheduler parallel \
          # --peering dynamic \
          # --seeds tcp://validator2:8800,tcp://validator3:8800,tcp://validator4:8800

  validator2:
    image: sawtooth/coffeechain-validator-npm:latest
    container_name: validator2
    hostname: validator2
    # validator without genesis block

    entrypoint: "bash -c \"\
        ./start_node.sh tcp://validator2:8800 tcp://validator:8800,tcp://validator3:8800,tcp://validator4:8800       
        \""
    volumes:
      - validator2-vol:/configs/

  validator3:
    image: sawtooth/coffeechain-validator-npm:latest
    container_name: validator3
    hostname: validator3
    # validator without genesis block

    entrypoint: "bash -c \"\  
        ./start_node.sh tcp://validator3:8800 tcp://validator:8800,tcp://validator2:8800,tcp://validator4:8800      
        \""
    volumes:
      - validator3-vol:/configs/

  validator4:
    image: sawtooth/coffeechain-validator-npm:latest
    container_name: validator4
    hostname: validator4
    # validator without genesis block
    

    entrypoint: "bash -c \"\
        ./start_node.sh tcp://validator4:8800 tcp://validator:8800,tcp://validator2:8800,tcp://validator3:8800
        \""
    volumes:
      - validator4-vol:/configs/

  rest-api:
    image: hyperledger/sawtooth-rest-api:1.0
    container_name: sawtooth-rest-api
    ports:
      - "8008:8008"
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api -C tcp://validator:4004 --bind rest-api:8008

  shell:
    image: hyperledger/sawtooth-all:1.0
    container_name: sawtooth-shell
    depends_on:
      - rest-api
    entrypoint: "bash -c \"\
        sawtooth keygen && \
        tail -f /dev/null \
        \""

  elk:
    image: sawtooth/logserverp:latest
    container_name: elk
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    hostname: elk
        
volumes:
  validator1-vol:
  validator2-vol:
  validator3-vol:
  validator4-vol:

